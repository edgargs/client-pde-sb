# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  release:
    types: [published]


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew bootJar

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        zip --junk-paths my-artifact build/libs/*.jar
    - name: Create Release
      id: create_release
      run: gh api /repos/$OWNER/$REPO/releases/tag/$TAG 
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
        TAG: GITHUB_REF_NAME
    - name: Upload Release Asset
      id: upload-release-asset 
      run: gh api --method POST $UPLOAD_URL?name=my-artifact.zip -f "@my-artifact.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }} #https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
      #with:
      #  asset_path: ./my-artifact.zip
      #  asset_name: my-artifact.zip
      #  asset_content_type: application/zip

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.6'
    #
    # - name: Build with Gradle 8.6
    #   run: gradle build

  build-native:

    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew nativeCompile
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
          name: dist-client-pde-sb-native
          path: build/native/nativeCompile/*

          

