# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Compile Native and Upload Release

on:
  release:
    types: [published]

jobs:

  build-native:

    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    #- name: Create Release
    #  id: create_release
    #  run: |
    #    release_id="$(gh api /repos/$OWNER/$REPO/releases/tags/$TAG --jq '.id')"
    #    echo 'id='$release_id >> "$GITHUB_OUTPUT"
    #  env:
    #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    OWNER: ${{ github.repository_owner }}
    #    REPO: ${{ github.event.repository.name }}
    #    TAG: ${{ github.ref_name }}

    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew nativeCompile

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        7z a dist-client-pde-sb-windows.zip build/native/nativeCompile/*

    - name: Upload Release Asset
      id: upload-release-asset
      run: |
        Invoke-RestMethod -Uri "https://uploads.github.com/repos/$($env:OWNER)/$($env:REPO)/releases/$($env:RELEASE_ID)/assets?name=$($env:ASSET_NAME)" -Method Post -Headers @{
          "Accept" = "application/vnd.github+json"
          "Authorization" = "Bearer $env:GITHUB_TOKEN"
          "X-GitHub-Api-Version" = "2022-11-28"
          "Content-Type" = "application/octet-stream"
        } -InFile $env:ASSET_PATH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
        RELEASE_ID: ${{ github.event.release.id }}
        ASSET_NAME: dist-client-pde-sb-windows.zip
        ASSET_PATH: .\dist-client-pde-sb-windows.zip


